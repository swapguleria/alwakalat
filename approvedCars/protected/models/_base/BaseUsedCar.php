<?php

/**
 * This is the model base class for the table "{{used_car}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsedCar".
 *
 * Columns in table "{{used_car}}" available as properties of the model,
 * followed by relations of table "{{used_car}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $maker_id
 * @property integer $model_id
 * @property integer $body_type_id
 * @property integer $year
 * @property double $milage
 * @property string $accident
 * @property string $accident_desc
 * @property string $warranty
 * @property string $warranty_expire_date
 * @property integer $service_package
 * @property integer $gear_type
 * @property integer $exterior_color
 * @property integer $interior_color
 * @property string $roof
 * @property string $camera
 * @property string $GPS
 * @property integer $fuel_type
 * @property integer $owners
 * @property integer $transmission
 * @property integer $kilometer
 * @property integer $price
 * @property integer $dealer_id
 * @property string $type_id
 * @property string $state_id
 * @property integer $create_user_id
 * @property string $create_time
 *
 * @property BodyType $bodyType
 * @property User $createUser
 * @property User $dealer
 * @property Maker $maker
 * @property Model $model
 */
abstract class BaseUsedCar extends GxActiveRecord
    {

    public static function getSelectOptions($id = null)
        {
        $list = array("No", "Yes");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getFuelOptions($id = null)
        {
        $list = array("Petrol", "Diesel", "CNG", "LPG", "Electric", "Hybrid");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getOwnersOptions($id = null)
        {
        $list = array("First Owner", "Second Owner", "Third or More Owners", "Unregistered Car");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getTransmissionOptions($id = null)
        {
        $list = array("Manual transmission", "Automatic transmission", "Continuously variable transmission (CVT)", "Semi-automatic and dual-clutch transmissions");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getColourOptions($id = null)
        {
        $list = array("White", "Black", "Silver", "Red", "Blue", "Grey", "Beige", "Brown", "Gold / Yellow", "Green", "Purple", "Maroon", "Others");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getGearTypeOptions($id = null)
        {
        $list = array("NO", "Yes");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getTypeOptions($id = null)
        {
        $list = array("TYPE1", "TYPE2", "TYPE3");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public static function getStatusOptions($id = null)
        {
        $list = array("Draft", "Published", "Archive");
        if ($id == null) return $list;
        if (is_numeric($id)) return $list [$id];
        return $id;
        }

    public function beforeValidate()
        {
        if ($this->isNewRecord)
            {
            if (!isset($this->create_user_id)) $this->create_user_id = Yii::app()->user->id;
            if (!isset($this->create_time)) $this->create_time = date('Y-m-d H:i:s');
            }else
            {
            
            }
        return parent::beforeValidate();
        }

    public static function model($className = __CLASS__)
        {
        return parent::model($className);
        }

    public function tableName()
        {
        return '{{used_car}}';
        }

    public static function label($n = 1)
        {
        return Yii::t('app', 'Approved Car|Approved Cars', $n);
        }

    public static function representingColumn()
        {
        return 'price';
        }

    public function rules()
        {
        return array(
            array('maker_id, model_id,speed,acceleration,engine_size,horse_power, body_type_id, year, service_package, price, dealer_id', 'required'),
            array('maker_id, model_id,speed,horse_power, body_type_id, year, service_package, gear_type, exterior_color, interior_color, fuel_type, owners, transmission, kilometer, price, dealer_id, create_user_id', 'numerical', 'integerOnly' => true),
            array('milage', 'numerical'),
            array('accident, warranty, roof, camera, GPS, type_id, state_id', 'length', 'max' => 1),
            array('accident_desc,banner_image, warranty_expire_date,speed,acceleration,engine_size,horse_power, create_time,expire_date', 'safe'),
            array('milage, accident, accident_desc, warranty, warranty_expire_date, gear_type, exterior_color, interior_color, roof, camera, GPS, fuel_type, owners, transmission, type_id, state_id, create_user_id, create_time', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, maker_id, model_id, body_type_id, year, milage, accident, accident_desc, warranty, warranty_expire_date, service_package, gear_type, exterior_color, interior_color, roof, camera, GPS, fuel_type, owners, transmission, kilometer, price, dealer_id, type_id, state_id, create_user_id, create_time', 'safe', 'on' => 'search'),
        );
        }

    public function relations()
        {
        return array(
            'bodyType' => array(self::BELONGS_TO, 'BodyType', 'body_type_id'),
            'createUser' => array(self::BELONGS_TO, 'User', 'create_user_id'),
            'dealer' => array(self::BELONGS_TO, 'User', 'dealer_id'),
            'maker' => array(self::BELONGS_TO, 'Maker', 'maker_id'),
            'model' => array(self::BELONGS_TO, 'CarModel', 'model_id'),
            'usedCarsImage' => array(self::HAS_MANY, 'UsedCarsImage', 'car_id'),
        );
        }

    public function pivotModels()
        {
        return array(
        );
        }

    public function attributeLabels()
        {
        return array(
            'id' => Yii::t('app', 'ID'),
            'maker_id' => null,
            'model_id' => null,
            'body_type_id' => null,
            'horse_power' => Yii::t('app', 'Horse Power'),
            'engine_size' => Yii::t('app', 'Engine Size'),
            'acceleration' => Yii::t('app', 'Acceleration'),
            'speed' => Yii::t('app', 'Speed'),
            'year' => Yii::t('app', 'Year'),
            'milage' => Yii::t('app', 'Milage'),
            'accident' => Yii::t('app', 'Accident'),
            'accident_desc' => Yii::t('app', 'Accident Desc'),
            'warranty' => Yii::t('app', 'Warranty'),
            'warranty_expire_date' => Yii::t('app', 'Warranty Expire Date'),
            'service_package' => Yii::t('app', 'Service Package'),
            'gear_type' => Yii::t('app', 'Gear Type'),
            'exterior_color' => Yii::t('app', 'Exterior Color'),
            'interior_color' => Yii::t('app', 'Interior Color'),
            'roof' => Yii::t('app', 'Roof'),
            'camera' => Yii::t('app', 'Camera'),
            'GPS' => Yii::t('app', 'Gps'),
            'fuel_type' => Yii::t('app', 'Fuel Type'),
            'owners' => Yii::t('app', 'Owners'),
            'transmission' => Yii::t('app', 'Transmission'),
            'kilometer' => Yii::t('app', 'Kilometer'),
            'price' => Yii::t('app', 'Price'),
            'dealer_id' => null,
            'type_id' => Yii::t('app', 'Type'),
            'state_id' => Yii::t('app', 'State'),
            'create_user_id' => null,
            'create_time' => Yii::t('app', 'Create Time'),
            'bodyType' => null,
            'createUser' => null,
            'dealer' => Yii::t('app', 'Dealer'),
            'maker' => null,
            'model' => null,
        );
        }

    public function search()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', $this->type_id, true);
        $criteria->compare('state_id', $this->state_id, true);
        $criteria->compare('create_user_id', $this->create_user_id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    public function searchApproval()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', User::STATE_ACTIVE);
        $criteria->compare('state_id', User::STATE_INACTIVE);
        $criteria->compare('create_user_id', $this->create_user_id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    public function searchApproved()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', User::STATE_ACTIVE);
        $criteria->compare('state_id', User::STATE_ACTIVE);
        $criteria->compare('create_user_id', $this->create_user_id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    public function searchSoled()
        {
        $now = new CDbExpression("NOW()");

        $criteria = new CDbCriteria;

        $criteria->addCondition('expire_date > ' . $now);
        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', User::STATE_INACTIVE);
        $criteria->compare('state_id', User::STATE_ACTIVE);
        $criteria->compare('create_user_id', $this->create_user_id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    public function searchDealer()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', User::STATE_ACTIVE);
        $criteria->compare('state_id', User::STATE_INACTIVE);
        $criteria->compare('create_user_id', Yii::app()->user->id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    public function searchDealerApproved()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', User::STATE_ACTIVE);
        $criteria->compare('state_id', User::STATE_ACTIVE);
        $criteria->compare('create_user_id', Yii::app()->user->id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    public function searchDealerSoled()
        {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('maker_id', $this->maker_id);
        $criteria->compare('model_id', $this->model_id);
        $criteria->compare('body_type_id', $this->body_type_id);
        $criteria->compare('year', $this->year);
        $criteria->compare('milage', $this->milage);
        $criteria->compare('accident', $this->accident, true);
        $criteria->compare('accident_desc', $this->accident_desc, true);
        $criteria->compare('warranty', $this->warranty, true);
        $criteria->compare('warranty_expire_date', $this->warranty_expire_date, true);
        $criteria->compare('service_package', $this->service_package);
        $criteria->compare('gear_type', $this->gear_type);
        $criteria->compare('exterior_color', $this->exterior_color);
        $criteria->compare('interior_color', $this->interior_color);
        $criteria->compare('roof', $this->roof, true);
        $criteria->compare('camera', $this->camera, true);
        $criteria->compare('GPS', $this->GPS, true);
        $criteria->compare('fuel_type', $this->fuel_type);
        $criteria->compare('owners', $this->owners);
        $criteria->compare('transmission', $this->transmission);
        $criteria->compare('kilometer', $this->kilometer);
        $criteria->compare('price', $this->price);
        $criteria->compare('dealer_id', $this->dealer_id);
        $criteria->compare('type_id', User::STATE_INACTIVE);
        $criteria->compare('state_id', User::STATE_ACTIVE);
        $criteria->compare('create_user_id', Yii::app()->user->id);
        $criteria->compare('create_time', $this->create_time, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
        }

    }
